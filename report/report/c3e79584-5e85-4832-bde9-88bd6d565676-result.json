{"name": "诊断测试10服务进入扩展会话", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <TestRunScript.TestDiagnose object at 0x05007520>\n\n    @allure.title(\"诊断测试10服务进入扩展会话\")\n    @allure.description(\"测试10 03服务进入扩展会话\")\n    def test_diag_0x10_3(self):\n>       self.run_script.diag_test(\"03\", \"10 03\", \"50 03 00\")\n\nTestRunScript.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <RunScript.DiagnoseRun object at 0x05007940>, session = '03', req_data = '10 03', exp = '50 03 00', all_match = True\n\n    def diag_test(self, session, req_data, exp, all_match=True):\n        if len(session) == 0:\n            # 不需要执行会话操作\n            assert self.canoe.send_Diag_Request(req_data, stream_flag=True)\n            if all_match:\n                assert exp == self.canoe.check_Diag_Response()\n            else:\n                assert exp in self.canoe.check_Diag_Response()\n        else:\n            # 先执行会话操作\n            assert self.canoe.send_Diag_Request(\"10 \" + session, stream_flag=True)\n            assert self.canoe.check_Diag_Positive()\n            assert self.canoe.send_Diag_Request(req_data, stream_flag=True)\n            if all_match:\n>               assert exp == self.canoe.check_Diag_Response()\nE               AssertionError\n\nRunScript.py:34: AssertionError"}, "description": "测试10 03服务进入扩展会话", "start": 1743410356275, "stop": 1743410358298, "uuid": "d1fa111e-bcf7-4ffb-9bcb-8f1c52ee1cd5", "historyId": "79b0663b81db2664cdaad16707dbc954", "testCaseId": "79b0663b81db2664cdaad16707dbc954", "fullName": "TestRunScript.TestDiagnose#test_diag_0x10_3", "labels": [{"name": "feature", "value": "诊断测试类"}, {"name": "suite", "value": "TestRunScript"}, {"name": "subSuite", "value": "TestDiagnose"}, {"name": "host", "value": "lilong-lxy"}, {"name": "thread", "value": "27444-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestRunScript"}]}